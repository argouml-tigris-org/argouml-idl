<?xml version="1.0"?>

<!-- =========================================================================
    Ant build file for the IDL module
 ========================================================================= -->

<project name="argouml-idl" default="compile" basedir=".">

  <!-- =================================================================== -->
  <!-- Initialization target                                               -->
  <!-- =================================================================== -->

 <target name="init">

    <tstamp/>

    <property name="version" value="0.9.5-${DSTAMP}-${TSTAMP}"/>

    <!-- Load ArgoUML properties -->
    <!-- we really need an absolute path for argo.root.dir -->
    <!-- if it is set in a property file before now, it must be absolute -->
    <property name="argo.root.dir" value="${basedir}/../argouml" />
    <!-- Read the override file to get base paths for default.properties
         correct for when running this from the Eclipse setup. -->
    <property file="${override.build.properties}"/>

    <property name="argo.src.dir" value="${argo.root.dir}/src/argouml-app/src"/>
    <property file="${argo.src.dir}/default.properties"/>

    <property name="argo.build.dir" value="../argouml/build"/>
    <property name="antlrall.jar.path" value="${argo.build.dir}/antlr-2.7.7.jar"/>
     
    <property name="module.root" value="."/>
    <property name="module.src.dir" 
      value="${module.root}/src:${module.root}/src_generated"/>

    <property name="manifest" value="manifest.mf"/>
    <property name="manifest.src" value="${module.root}/src/org/${manifest}"/>

    <property name="module.build.dir" value="${module.root}/build"/>
    <property name="module.build.classes" value="${module.build.dir}/classes"/>

    <property name="result.jar" value="argo_idl.jar"/>

    <path id="compile.classpath">
      <pathelement location="${argo.build.dir}/argouml-model.jar"/>
      <pathelement location="${argo.build.dir}/argouml.jar"/>
      <pathelement location="${argo.build.dir}/gef.jar"/>
      <pathelement location="${argo.build.dir}/log4j.jar"/>
      <pathelement location="${antlrall.jar.path}"/>
    </path>

    <property name="debug" value="on"/>
    <property name="optimize" value="on"/>
    <property name="deprecation" value="off"/>
    <property name="result.dir" value="${argo.root.dir}/build"/>

  </target>

  <!-- =================================================================== -->
  <!-- Prepares the build directory                                        -->
  <!-- =================================================================== -->
  <target name="prepare" depends="init">
    <!-- create directories -->
    <echo message="Preparing the build directories"/>
    <!-- These must be there already -->
  </target>

  <!-- =================================================================== -->
  <!-- Generates the parsers from the grammars by using Antlr              -->
  <!-- =================================================================== -->

  <target name="generateparser" depends="prepare"
      description="generates the parser(s) from the grammar file(s)">
    <echo message="Generate parsers using ${antlrall.jar.path}"/>

    <java fork="yes" classname="antlr.Tool" classpath="${antlrall.jar.path}"
          failonerror="yes">
      <arg value="-o"/>
      <arg file="src_generated/org/argouml/uml/reveng/idl"/>
      <arg file="src/org/argouml/uml/reveng/idl/idl_modified.g"/>
    </java>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the source directory                                       -->
  <!-- =================================================================== -->

  <target name="compile" depends="generateparser,prepare"
      description="compiles the source code to the tree under build"> 

    <echo message="Compiling the sources"/>

    <!-- create directories -->
    <mkdir dir="${module.build.classes}"/>

    <javac
           destdir="${module.build.classes}"
           excludes="*.txt,*.bat,*.xml,*.sh"
           debug="${debug}"
           deprecation="${deprecation}"
           optimize="${optimize}">
        <src path="${module.src.dir}"/>
        <classpath>
            <path refid="compile.classpath"/>
        </classpath>
     </javac>
  </target>


  <!-- =================================================================== -->
  <!-- Creates the class package                                           -->
  <!-- =================================================================== -->
  <target name="jar" depends="compile"
        description="generates the argo_idl.jar file">
    <filter token="version" value="${version}"/>
    <copy file="${manifest.src}" tofile="${module.build.classes}/${manifest}" filtering="on" overwrite="on" />
    <jar jarfile="${module.build.dir}/${result.jar}"
         basedir="${module.build.classes}"
         includes="org/argouml/**"
         excludes="*.txt,*.bat,*.xml,*.sh,${manifest}"
         manifest="${module.build.classes}/${manifest}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Run ArgoUML from compiled sources                                   -->
  <!-- =================================================================== -->
  <target name="run" depends="jar"
      description="runs ArgoUML with idl enabled">
    <java classname="org.argouml.application.Main"
          fork="yes">
        <classpath>
            <fileset dir="${module.build.dir}">
                <include name="${result.jar}" />
            </fileset>
            <!-- TODO: Can somebody explain why this is working? -->
            <pathelement location="${argo.build.dir}/argouml.jar"/>
        </classpath>

    </java>
  </target>

  <!-- =================================================================== -->
  <!-- Clean targets                                                       -->
  <!-- =================================================================== -->
  <target name="clean" depends="init"
        description="Cleans built files.">
    <delete file="${result.dir}/ext/${result.jar}"/>
    <delete file="${argo.build.dir}/ext/${result.jar}"/>
    <delete dir="${module.build.dir}"/>
  	<delete>
  	  <fileset dir="src/org/argouml/uml/reveng/idl">
  	  	<include name="IDLLexer.java"/>
  	  	<include name="IDLParser.java"/>
  	  	<include name="IDLTokenTypes.java"/>
  	  	<include name="IDLTokenTypes.txt"/>
  	  </fileset>
    </delete>
  </target>

  <!-- =================================================================== -->
  <!-- Move the jar file into the extension directory.                     -->
  <!-- =================================================================== -->
  <target name="install" depends="jar"
      description="Puts the jar file into ../argouml/build/ext">
    <copy todir="${result.dir}/ext">
      <fileset dir="${module.build.dir}" includes="${result.jar}"/>
    </copy>
  </target>

</project>

<!-- End of file -->
